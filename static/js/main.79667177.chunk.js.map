{"version":3,"sources":["components/AddTodo/index.tsx","components/TodoListItem/index.tsx","components/TodoList/index.tsx","components/Footer/index.tsx","components/Todo/index.tsx","components/Sidebar/index.tsx","index.tsx"],"names":["AddTodoForm","addTodo","useState","newTodo","setNewTodo","className","onSubmit","e","preventDefault","type","value","onChange","target","placeholder","TodoListItem","todo","completeTodo","deleteTodo","checked","complete","onClick","data","CloseOutlined","TodoList","todos","completeAll","choose","newTodos","filter","htmlFor","map","Footer","clearCompleted","count","setChoose","initialTodos","Todos","setTodos","setCount","trim","length","selectedTodo","oldTodo","i","splice","flag","areAllComplete","Siderbar","href","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.79667177.chunk.js","sourcesContent":["import React, { useState, ChangeEvent, FormEvent } from 'react'\r\nimport { AddTodo } from '../types'\r\nimport './index.css'\r\n\r\ninterface Props {\r\n    addTodo: AddTodo\r\n}\r\n\r\nconst AddTodoForm: React.FC<Props> = ({ addTodo }) => {\r\n    const [newTodo, setNewTodo] = useState('')\r\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setNewTodo(e.target.value)\r\n    }\r\n    const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault()\r\n        addTodo(newTodo)\r\n        setNewTodo('')\r\n    }\r\n    return (\r\n        <div className=\"header\">\r\n            <h1>todos</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    className=\"addTodo\"\r\n                    type=\"text\"\r\n                    value={newTodo}\r\n                    onChange={handleChange}\r\n                    placeholder=\"What needs to be done?\"\r\n                />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default AddTodoForm\r\n","import React from 'react'\r\nimport { CloseOutlined } from '@ant-design/icons'\r\nimport { Todo, CompleteTodo, DeleteTodo } from '../types'\r\nimport './index.css'\r\n\r\ninterface Props {\r\n    todo: Todo\r\n    completeTodo: CompleteTodo\r\n    deleteTodo: DeleteTodo\r\n}\r\nconst TodoListItem: React.FC<Props> = ({ todo, completeTodo, deleteTodo }) => (\r\n    <li className=\"item\">\r\n        <input checked={todo.complete} onClick={() => completeTodo(todo)} type=\"checkbox\" />\r\n        <label className={todo.complete ? 'complete' : ''}>{todo.data}</label>\r\n        <CloseOutlined className=\"delete\" onClick={() => deleteTodo(todo)} />\r\n    </li>\r\n)\r\nexport default TodoListItem\r\n","import React from 'react'\r\nimport TodoListItem from '../TodoListItem'\r\nimport { Todo, CompleteTodo, DeleteTodo, CompleteAll } from '../types'\r\nimport './index.css'\r\n\r\ninterface Props {\r\n    todos: Todo[]\r\n    choose: number\r\n    completeTodo: CompleteTodo\r\n    deleteTodo: DeleteTodo\r\n    completeAll: CompleteAll\r\n}\r\n\r\nconst TodoList: React.FC<Props> = ({ todos, completeTodo, deleteTodo, completeAll, choose }) => {\r\n    const newTodos = todos.filter((todo) => {\r\n        if (choose === 1) {\r\n            return todo\r\n        }\r\n        if (choose === 2) {\r\n            return todo.complete === false\r\n        }\r\n        if (choose === 3) {\r\n            return todo.complete === true\r\n        }\r\n        return todo\r\n    })\r\n    return (\r\n        <div>\r\n            <input className=\"toggle-all\" type=\"checkbox\" />\r\n            <label htmlFor=\"toggle-all\" onClick={completeAll} />\r\n            <ul className=\"todo-list\">\r\n                {newTodos.map((todo) => {\r\n                    return (\r\n                        <TodoListItem\r\n                            todo={todo}\r\n                            completeTodo={completeTodo}\r\n                            deleteTodo={deleteTodo}\r\n                        />\r\n                    )\r\n                })}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\nexport default TodoList\r\n","import React, { useState } from 'react'\r\nimport TodoList from '../TodoList'\r\nimport { ClearCompleted, Count, CompleteTodo, DeleteTodo, Todo, CompleteAll } from '../types'\r\nimport './index.css'\r\n\r\ninterface Props {\r\n    completeAll: CompleteAll\r\n    clearCompleted: ClearCompleted\r\n    completeTodo: CompleteTodo\r\n    deleteTodo: DeleteTodo\r\n    todos: Todo[]\r\n    count: Count\r\n}\r\n\r\nconst Footer: React.FC<Props> = ({\r\n    todos,\r\n    clearCompleted,\r\n    completeTodo,\r\n    deleteTodo,\r\n    count,\r\n    completeAll\r\n}) => {\r\n    const [choose, setChoose] = useState(1)\r\n    return (\r\n        <div>\r\n            <TodoList\r\n                completeAll={completeAll}\r\n                completeTodo={completeTodo}\r\n                deleteTodo={deleteTodo}\r\n                choose={choose}\r\n                todos={todos}\r\n            />\r\n            <div className=\"footer\">\r\n                <span className=\"count\">{count} item left</span>\r\n                <button onClick={() => setChoose(1)} type=\"button\">\r\n                    All\r\n                </button>\r\n                <button onClick={() => setChoose(2)} type=\"button\">\r\n                    Active\r\n                </button>\r\n                <button onClick={() => setChoose(3)} type=\"button\">\r\n                    Completed\r\n                </button>\r\n                <button onClick={clearCompleted} type=\"button\" className=\"clear\">\r\n                    Clear completed\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Footer\r\n","import React, { useState } from 'react'\r\nimport { Todo, Count } from '../types'\r\nimport AddTodoForm from '../AddTodo'\r\nimport './index.css'\r\nimport Footer from '../Footer'\r\n\r\nconst initialTodos: Todo[] = [{ data: '写todo', complete: false }]\r\nconst initCount: Count = 1\r\n\r\nconst Todos: React.FC = () => {\r\n    const [todos, setTodos] = useState(initialTodos)\r\n    const [count, setCount] = useState(initCount)\r\n    const addTodo = (newTodo: string) => {\r\n        if (newTodo.trim() === '')\r\n            // 空值，则跳过\r\n            return\r\n        setTodos([\r\n            ...todos,\r\n            {\r\n                data: newTodo,\r\n                complete: false\r\n            }\r\n        ])\r\n        setCount(count + 1)\r\n    }\r\n\r\n    const completeTodo = (selectedTodo: Todo) => {\r\n        if (!selectedTodo.complete) {\r\n            setCount(count - 1)\r\n        }\r\n        if (selectedTodo.complete) {\r\n            setCount(count + 1)\r\n        }\r\n        const newTodos = todos.map((todo) => {\r\n            if (todo === selectedTodo) {\r\n                return {\r\n                    ...todo,\r\n                    complete: !todo.complete\r\n                }\r\n            }\r\n            return todo\r\n        })\r\n        setTodos(newTodos)\r\n    }\r\n    const deleteTodo = (oldTodo: Todo) => {\r\n        if (oldTodo.complete === false) {\r\n            setCount(count - 1)\r\n        }\r\n        const newTodos = [...todos]\r\n        newTodos.map((todo, i) => {\r\n            if (todo === oldTodo) {\r\n                newTodos.splice(i, 1)\r\n            }\r\n            return todo\r\n        })\r\n        setTodos(newTodos)\r\n    }\r\n    const clearCompleted = () => {\r\n        const newTodos = todos.filter((todo) => {\r\n            return todo.complete === false\r\n        })\r\n        setTodos(newTodos)\r\n    }\r\n    function areAllComplete() {\r\n        let flag = true\r\n        todos.map((todo) => {\r\n            if (todo.complete === false) {\r\n                flag = false\r\n            }\r\n        })\r\n        if (flag) {\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n    const completeAll = () => {\r\n        if (areAllComplete()) {\r\n            const newTodos = todos.map((todo) => {\r\n                return {\r\n                    ...todo,\r\n                    complete: false\r\n                }\r\n            })\r\n            setCount(todos.length)\r\n            setTodos(newTodos)\r\n        } else {\r\n            const newTodos = todos.map((todo) => {\r\n                return {\r\n                    ...todo,\r\n                    complete: true\r\n                }\r\n            })\r\n            setCount(0)\r\n            setTodos(newTodos)\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"body\">\r\n            <AddTodoForm addTodo={addTodo} />\r\n            {!!todos.length && (\r\n                <Footer\r\n                    todos={todos}\r\n                    count={count}\r\n                    completeTodo={completeTodo}\r\n                    deleteTodo={deleteTodo}\r\n                    clearCompleted={clearCompleted}\r\n                    completeAll={completeAll}\r\n                />\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todos\r\n","import React from 'react'\r\nimport './index.css'\r\n\r\nconst Siderbar: React.FC = () => {\r\n    return (\r\n        <div className=\"right\">\r\n            <h3>ECMAScript 6</h3>\r\n            <span>\r\n                <h5>Vanilla ES6 Example</h5>\r\n                <a href=\"https://github.com/tastejs/todomvc/tree/gh-pages/examples/vanilla-es6\">\r\n                    Source\r\n                </a>\r\n            </span>\r\n            <hr />\r\n            <blockquote className=\"quote speech-bubble\">\r\n                <p>\r\n                    The ECMAScript 6 (ES2015) standard was ratified in 2015 following years of work\r\n                    standardizing improvements to ECMAScript 3. The committee introduced a wide\r\n                    variety of improvements such as arrow functions, const declarations, and native\r\n                    Promises.\r\n                </p>\r\n                <footer>\r\n                    <a href=\"http://developer.mozilla.org/en-US/docs/JavaScript\">ECMAScript 6</a>\r\n                </footer>\r\n            </blockquote>\r\n            <footer>\r\n                <hr />\r\n                <em>\r\n                    If you have other helpful links to share, or find any of the links above no\r\n                    longer work, please let us know.\r\n                </em>\r\n            </footer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Siderbar\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport Todo from './components/Todo'\nimport Siderbar from './components/Sidebar'\n\nReactDOM.render(\n    // <Layout className=\"layout\">\n    //     <Sider className=\"sider\">\n    //         <Siderbar />\n    //     </Sider>\n    //     <Content>\n    //         <Todo />\n    //     </Content>\n    // </Layout>,\n    <div className=\"layout\">\n        <div className=\"learn\">\n            <Siderbar />\n        </div>\n        <Todo />\n    </div>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}