{"version":3,"sources":["components/AddTodo/index.tsx","components/TodoListItem/index.tsx","components/TodoList/index.tsx","components/Footer/index.tsx","components/Todo/index.tsx","index.tsx"],"names":["AddTodoForm","addTodo","useState","newTodo","setNewTodo","className","onSubmit","e","preventDefault","type","value","onChange","target","placeholder","TodoListItem","todo","completeTodo","deleteTodo","complete","checked","onClick","data","CloseCircleOutlined","TodoList","todos","choose","newTodos","filter","map","Footer","clearCompleted","count","setChoose","initialTodos","Todos","setTodos","setCount","trim","selectedTodo","oldTodo","i","splice","Sider","Layout","Content","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.40e6afa4.chunk.js","sourcesContent":["import React, { useState, ChangeEvent, FormEvent } from 'react'\r\nimport { AddTodo } from '../types'\r\nimport './index.css'\r\n\r\ninterface Props {\r\n    addTodo: AddTodo\r\n}\r\n\r\nconst AddTodoForm: React.FC<Props> = ({ addTodo }) => {\r\n    const [newTodo, setNewTodo] = useState('')\r\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setNewTodo(e.target.value)\r\n    }\r\n    const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault()\r\n        addTodo(newTodo)\r\n        setNewTodo('')\r\n    }\r\n    return (\r\n        <div className=\"header\">\r\n            <h1>todos</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    className=\"addTodo\"\r\n                    type=\"text\"\r\n                    value={newTodo}\r\n                    onChange={handleChange}\r\n                    placeholder=\"What needs to be done?\"\r\n                />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default AddTodoForm\r\n","import React from 'react'\r\nimport { CloseCircleOutlined } from '@ant-design/icons'\r\nimport { Todo, CompleteTodo, DeleteTodo } from '../types'\r\nimport './index.css'\r\n\r\ninterface Props {\r\n    todo: Todo\r\n    completeTodo: CompleteTodo\r\n    deleteTodo: DeleteTodo\r\n}\r\nconst TodoListItem: React.FC<Props> = ({ todo, completeTodo, deleteTodo }) => (\r\n    <li className=\"item\">\r\n        <label className={todo.complete ? 'complete' : ''}>\r\n            <input checked={todo.complete} onClick={() => completeTodo(todo)} type=\"checkbox\" />\r\n            {todo.data}\r\n        </label>\r\n        <CloseCircleOutlined className=\"delete\" onClick={() => deleteTodo(todo)} />\r\n    </li>\r\n)\r\nexport default TodoListItem\r\n","import React from 'react'\r\nimport TodoListItem from '../TodoListItem'\r\nimport { Todo, CompleteTodo, DeleteTodo } from '../types'\r\nimport './index.css'\r\n\r\ninterface Props {\r\n    todos: Todo[]\r\n    completeTodo: CompleteTodo\r\n    deleteTodo: DeleteTodo\r\n    choose: number\r\n}\r\n\r\nconst TodoList: React.FC<Props> = ({ todos, completeTodo, deleteTodo, choose }) => {\r\n    const newTodos = todos.filter((todo) => {\r\n        if (choose === 1) {\r\n            return todo\r\n        }\r\n        if (choose === 2) {\r\n            return todo.complete === false\r\n        }\r\n        if (choose === 3) {\r\n            return todo.complete === true\r\n        }\r\n        return todo\r\n    })\r\n    return (\r\n        <div>\r\n            <ul className=\"todo-list\">\r\n                {newTodos.map((todo) => {\r\n                    return (\r\n                        <TodoListItem\r\n                            todo={todo}\r\n                            completeTodo={completeTodo}\r\n                            deleteTodo={deleteTodo}\r\n                        />\r\n                    )\r\n                })}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\nexport default TodoList\r\n","import React, { useState } from 'react'\r\nimport TodoList from '../TodoList'\r\nimport { ClearCompleted, Count, CompleteTodo, DeleteTodo, Todo } from '../types'\r\nimport './index.css'\r\n\r\ninterface Props {\r\n    clearCompleted: ClearCompleted\r\n    completeTodo: CompleteTodo\r\n    deleteTodo: DeleteTodo\r\n    todos: Todo[]\r\n    count: Count\r\n}\r\n\r\nconst Footer: React.FC<Props> = ({ todos, clearCompleted, completeTodo, deleteTodo, count }) => {\r\n    const [choose, setChoose] = useState(1)\r\n    return (\r\n        <div>\r\n            <TodoList\r\n                choose={choose}\r\n                completeTodo={completeTodo}\r\n                deleteTodo={deleteTodo}\r\n                todos={todos}\r\n            />\r\n            <div className=\"footer\">\r\n                {count} item left\r\n                <button onClick={() => setChoose(1)} type=\"button\">\r\n                    All\r\n                </button>\r\n                <button onClick={() => setChoose(2)} type=\"button\">\r\n                    Active\r\n                </button>\r\n                <button onClick={() => setChoose(3)} type=\"button\">\r\n                    Completed\r\n                </button>\r\n                <button onClick={clearCompleted} type=\"button\" className=\"clear\">\r\n                    Clear completed\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Footer\r\n","import React, { useState } from 'react'\r\nimport { Todo, Count } from '../types'\r\nimport AddTodoForm from '../AddTodo'\r\nimport './index.css'\r\nimport Footer from '../Footer'\r\n\r\nconst initialTodos: Todo[] = [{ data: '写todo', complete: false }]\r\nconst initCount: Count = 1\r\n\r\nconst Todos: React.FC = () => {\r\n    const [todos, setTodos] = useState(initialTodos)\r\n    const [count, setCount] = useState(initCount)\r\n    const addTodo = (newTodo: string) => {\r\n        if (newTodo.trim() === '')\r\n            // 空值，则跳过\r\n            return\r\n        setTodos([\r\n            ...todos,\r\n            {\r\n                data: newTodo,\r\n                complete: false\r\n            }\r\n        ])\r\n        setCount(count + 1)\r\n    }\r\n\r\n    const completeTodo = (selectedTodo: Todo) => {\r\n        if (!selectedTodo.complete) {\r\n            setCount(count - 1)\r\n        }\r\n        if (selectedTodo.complete) {\r\n            setCount(count + 1)\r\n        }\r\n        const newTodos = todos.map((todo) => {\r\n            if (todo === selectedTodo) {\r\n                return {\r\n                    ...todo,\r\n                    complete: !todo.complete\r\n                }\r\n            }\r\n            return todo\r\n        })\r\n        setTodos(newTodos)\r\n    }\r\n    const deleteTodo = (oldTodo: Todo) => {\r\n        if (oldTodo.complete === false) {\r\n            setCount(count - 1)\r\n        }\r\n        const newTodos = [...todos]\r\n        newTodos.map((todo, i) => {\r\n            if (todo === oldTodo) {\r\n                newTodos.splice(i, 1)\r\n            }\r\n            return todo\r\n        })\r\n        setTodos(newTodos)\r\n    }\r\n    const clearCompleted = () => {\r\n        const newTodos = todos.filter((todo) => {\r\n            return todo.complete === false\r\n        })\r\n        setTodos(newTodos)\r\n    }\r\n    return (\r\n        <div className=\"body\">\r\n            <AddTodoForm addTodo={addTodo} />\r\n            <Footer\r\n                todos={todos}\r\n                count={count}\r\n                completeTodo={completeTodo}\r\n                deleteTodo={deleteTodo}\r\n                clearCompleted={clearCompleted}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todos\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport { Layout } from 'antd'\nimport Todo from './components/Todo'\n\nconst { Sider, Content } = Layout\n\nReactDOM.render(\n    <React.StrictMode>\n        <Layout className=\"layout\">\n            <Sider className=\"sider\">ECMAScript 6</Sider>\n            <Content>\n                <Todo />\n            </Content>\n        </Layout>\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}